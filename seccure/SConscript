import os
Import('env')

env.Append(
    LIBPATH = "../libgcrypt-root/lib",
    CFLAGS = "-O2 -Wall",
    CXXINCLUDE = "-I../libgcrypt-root/include",
)
 # -D NOBEEP ?

# Create hardlinks from source to all targets
def MakeHardLink(target, source, env):
  for i in target:
    os.link(Dir('.').abspath+'/'+str(source[0]),
            Dir('.').abspath+'/'+str(i)) 
    return None

bldr = Builder(action=MakeHardLink)
env.Append( BUILDERS = {'MakeHardLink' : bldr } )

# doc: seccure.1 seccure.1.html

#install: default
#	install -m0755 seccure-key $(DESTDIR)/usr/bin
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-encrypt
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-decrypt
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-sign
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-verify
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-signcrypt
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-veridec
#	ln -f $(DESTDIR)/usr/bin/seccure-key $(DESTDIR)/usr/bin/seccure-dh
#	install -m0644 seccure.1 $(DESTDIR)/usr/share/man/man1


env.Program('seccure-key', Split("""
        seccure.c
        numtheory.c
        ecc.c
        serialize.c
        protocol.c
        curves.c
        aes256ctr.c
    """),
    LIBS=['gcrypt'] ,
)

# Links
linked = Split("""
    seccure-encrypt
    seccure-decrypt
    seccure-sign
    seccure-verify
    seccure-signcrypt
    seccure-veridec
    seccure-dh
""")
for i in linked:
    env.MakeHardLink(i, ['seccure-key'])


#seccure.1: seccure.manpage.xml
#	xmltoman seccure.manpage.xml > seccure.1
#
#seccure.1.html: seccure.manpage.xml
#	xmlmantohtml seccure.manpage.xml > seccure.1.html
